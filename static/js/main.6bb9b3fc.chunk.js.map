{"version":3,"sources":["index.js"],"names":["Hello","props","handleExchange","e","tick","target","getAttribute","console","log","value","replace","num","parseFloat","Number","isNaN","updateResult","rmb","setState","rmbMoney","usdMoney","rate","usd","date","Date","state","this","setInterval","toLocaleString","money","n","Math","round","title","type","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+OAOMA,G,kBACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAiCVC,eAAe,SAACC,GACZ,IAAIC,EAAKD,EAAEE,OAAOC,aAAa,QAC/BC,QAAQC,IAAI,QAAQJ,GACpB,IAAIK,EAAM,GAEVA,GADAA,EAAMN,EAAEE,OAAOI,OACHC,QAAQ,YAAc,IAClCH,QAAQC,IAAI,SAASC,GACrB,IAAIE,EAAKC,WAAWH,GAQpB,OANGI,OAAOC,MAAMH,KAEZA,EAAI,MAERA,EAAI,EAAKI,aAAaJ,GACtBJ,QAAQC,IAAI,OAAOG,GACXP,GACJ,IAAK,MACF,EAAKY,IAAIL,EACT,EAAKM,SAAS,CAACC,SAASP,IACvB,EAAKM,SAAS,CAACE,SAAS,EAAKJ,aAAaJ,EAAI,EAAKS,QACnD,MACJ,IAAK,MACF,EAAKC,IAAIV,EACR,EAAKM,SAAS,CAACC,SAAS,EAAKH,aAAaJ,EAAI,EAAKS,QACrD,EAAKH,SAAS,CAACE,SAAS,EAAKJ,aAAaJ,KACxC,MACJ,IAAK,OACF,EAAKS,KAAKT,EACV,EAAKM,SAAS,CAACG,KAAKT,IACpB,EAAKM,SAAS,CAACC,SAAS,EAAKH,aAAa,EAAKM,IAAI,EAAKD,QACxD,EAAKH,SAAS,CAACE,SAAS,EAAKJ,aAAa,EAAKM,SA9DtD,EAAKD,KAAK,IACV,EAAKJ,IAAI,IACT,EAAKK,IAAI,EAAKN,aAAa,EAAKC,IAAI,EAAKI,MACzC,EAAKE,KAAK,IAAIC,KACd,EAAKC,MAAQ,CACTN,SAAS,GAAG,EAAKF,IACjBG,SAAS,GAAG,EAAKE,IACjBD,KAAK,GAAG,EAAKA,KACbE,KAAK,EAAKA,MAVC,E,iFAcE,IAAD,OAEhBG,KAAKR,SAAS,CAACC,SAASO,KAAKV,aAAaU,KAAKT,OAC/CS,KAAKR,SAAS,CAACE,SAASM,KAAKV,aAAaU,KAAKT,IAAIS,KAAKL,QACxDM,aAAY,WACR,EAAKJ,KAAK,IAAIC,KACd,EAAKN,SAAS,CAACK,KAAK,EAAKA,KAAKK,qBAEhC,O,mFAOOC,GACT,IAAIC,EAAQ,IAAND,EAEN,MAAO,IADPC,EAAEC,KAAKC,MAAMF,GAAG,O,+BA0ChB,OAAQ,6BACA,kDAAwBJ,KAAKxB,MAAM+B,MAAnC,eACA,4BAAKP,KAAKD,MAAMF,KAAKK,kBACrB,kCACI,sGACA,2BAAOM,KAAK,OAAQ7B,KAAK,OAAOK,MAAOgB,KAAKD,MAAMJ,KAAMc,SAAUT,KAAKvB,kBAE3E,kCAEI,iDACA,2BAAOE,KAAK,MAAM6B,KAAK,OAAOxB,MAAOgB,KAAKD,MAAML,SAAWe,SAAUT,KAAKvB,kBAG9E,kCACI,uDACA,2BAAOE,KAAK,MAAM6B,KAAK,OAAOxB,MAAOgB,KAAKD,MAAMN,SAAUgB,SAAUT,KAAKvB,uB,GAzFzEiC,IAAMC,YAuG1BC,IAASC,OAAO,kBAACtC,EAAD,CAAOgC,MAAM,yCAAYO,SAASC,eAAe,W","file":"static/js/main.6bb9b3fc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport \"./css/buttonstyle.css\"\n\nclass Hello extends React.Component {\n    constructor(props) {\n        super(props);\n        this.rate=6.7;\n        this.rmb=100;\n        this.usd=this.updateResult(this.rmb/this.rate);\n        this.date=new Date();\n        this.state = {\n            rmbMoney:''+this.rmb,\n            usdMoney:''+this.usd,\n            rate:''+this.rate,\n            date:this.date\n        };\n    }\n\n    componentDidMount() {\n\n        this.setState({rmbMoney:this.updateResult(this.rmb)});\n        this.setState({usdMoney:this.updateResult(this.rmb/this.rate)});\n        setInterval(()=>{\n            this.date=new Date();\n            this.setState({date:this.date.toLocaleString()})\n\n        },1000);\n\n    }\n\n    componentWillUnmount() {\n\n    }\n    updateResult(money){\n        let n=money*1000;\n        n=Math.round(n)/1000;\n        return \"\"+n;\n    }\n    handleExchange=(e)=> {\n        let tick=e.target.getAttribute('tick');\n        console.log('tick:'+tick);\n        let value='';\n        value=e.target.value;\n        value=value.replace('/[^\\d\\.]+/g','');\n        console.log('value:'+value);\n        let num= parseFloat(value);\n\n        if(Number.isNaN(num))\n        {\n            num='0.';\n        }\n        num=this.updateResult(num)\n        console.log(\"num:\"+num);\n        switch (tick) {\n            case 'rmb':\n               this.rmb=num;\n               this.setState({rmbMoney:num});\n                this.setState({usdMoney:this.updateResult(num/this.rate)});\n                break;\n            case 'usd':\n               this.usd=num;\n                this.setState({rmbMoney:this.updateResult(num*this.rate)});\n              this.setState({usdMoney:this.updateResult(num)});\n                break;\n            case 'rate':\n               this.rate=num;\n               this.setState({rate:num});\n               this.setState({rmbMoney:this.updateResult(this.usd*this.rate)});\n               this.setState({usdMoney:this.updateResult(this.usd)});\n                break;\n            default:\n                break;\n        }\n\n    };\n\n    render() {\n        return (<div>\n                <h2>********** Welcome {this.props.title} ********* </h2>\n                <h3>{this.state.date.toLocaleString()}</h3>\n                <fieldset>\n                    <legend>请输入美元兑人民币汇率</legend>\n                    <input type=\"text\"  tick=\"rate\" value={this.state.rate} onChange={this.handleExchange}/>\n                </fieldset>\n                <fieldset>\n\n                    <legend>美元:</legend>\n                    <input tick=\"usd\" type=\"text\" value={this.state.usdMoney } onChange={this.handleExchange}   />\n\n                </fieldset>\n                <fieldset>\n                    <legend>人民币:</legend>\n                    <input tick='rmb' type=\"text\" value={this.state.rmbMoney} onChange={this.handleExchange}/>\n\n                </fieldset>\n\n\n\n            </div>\n        );\n    }\n}\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(<Hello title='汇率转换演示'/>, document.getElementById('root')\n)\n;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}